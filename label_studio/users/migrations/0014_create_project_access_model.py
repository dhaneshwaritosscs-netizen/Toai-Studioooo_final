# Generated by Django 5.1.12 on 2025-09-24 09:03

import core.utils.common
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("projects", "0028_auto_20241107_1031"),
        ("users", "0013_user_created_by"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("admin", "Administrator"),
                            ("manager", "Manager"),
                            ("annotator", "Annotator"),
                            ("viewer", "Viewer"),
                            ("guest", "Guest"),
                        ],
                        help_text="The name of the role",
                        max_length=50,
                        unique=True,
                        verbose_name="role name",
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        help_text="Human-readable name for the role",
                        max_length=100,
                        verbose_name="display name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of what this role can do",
                        verbose_name="description",
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(
                        default=dict,
                        help_text="JSON object containing role permissions",
                        verbose_name="permissions",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this role is currently active",
                        verbose_name="is active",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "User Role",
                "verbose_name_plural": "User Roles",
                "db_table": "user_role",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AccessLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("access_denied", "Access Denied"),
                            ("permission_granted", "Permission Granted"),
                            ("permission_denied", "Permission Denied"),
                            ("role_changed", "Role Changed"),
                            ("status_changed", "Status Changed"),
                            ("api_access", "API Access"),
                        ],
                        help_text="Type of action performed",
                        max_length=50,
                        verbose_name="action",
                    ),
                ),
                (
                    "details",
                    models.JSONField(
                        default=dict,
                        help_text="Additional details about the action",
                        verbose_name="details",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address from which the action was performed",
                        null=True,
                        verbose_name="IP address",
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="User agent string from the request",
                        verbose_name="user agent",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When the action occurred",
                        verbose_name="timestamp",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who performed the action",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Access Log",
                "verbose_name_plural": "Access Logs",
                "db_table": "access_log",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "action"], name="access_log_user_id_34a89d_idx"
                    ),
                    models.Index(
                        fields=["timestamp"], name="access_log_timesta_9fc442_idx"
                    ),
                    models.Index(
                        fields=["ip_address"], name="access_log_ip_addr_b7cb01_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ProjectAccess",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("read", "Read Only"),
                            ("write", "Read/Write"),
                            ("admin", "Administrator"),
                        ],
                        default="read",
                        help_text="Level of access to the project",
                        max_length=20,
                        verbose_name="access level",
                    ),
                ),
                (
                    "granted_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When access was granted",
                        verbose_name="granted at",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this access expires",
                        null=True,
                        verbose_name="expires at",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this access is currently active",
                        verbose_name="is active",
                    ),
                ),
                (
                    "granted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who granted this access",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="granted_project_accesses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        help_text="Project the user has access to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_accesses",
                        to="projects.project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User with project access",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_accesses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Access",
                "verbose_name_plural": "Project Accesses",
                "db_table": "project_access",
                "indexes": [
                    models.Index(
                        fields=["user", "is_active"],
                        name="project_acc_user_id_925d6e_idx",
                    ),
                    models.Index(
                        fields=["project", "is_active"],
                        name="project_acc_project_4392e8_idx",
                    ),
                    models.Index(
                        fields=["expires_at"], name="project_acc_expires_8503c6_idx"
                    ),
                ],
                "unique_together": {("user", "project")},
            },
        ),
        migrations.CreateModel(
            name="UserAccess",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                            ("pending", "Pending"),
                        ],
                        default="active",
                        help_text="Current access status of the user",
                        max_length=20,
                        verbose_name="access status",
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(
                        default=dict,
                        help_text="Custom permissions specific to this user",
                        verbose_name="custom permissions",
                    ),
                ),
                (
                    "access_token",
                    models.CharField(
                        default=core.utils.common.create_hash,
                        help_text="Unique token for API access",
                        max_length=256,
                        unique=True,
                        verbose_name="access token",
                    ),
                ),
                (
                    "last_access",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the user last accessed the system",
                        null=True,
                        verbose_name="last access",
                    ),
                ),
                (
                    "access_expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this user's access expires",
                        null=True,
                        verbose_name="access expires at",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this access profile",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_access_profiles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="The user this access profile belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        help_text="The primary role assigned to this user",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="users",
                        to="users.userrole",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Access",
                "verbose_name_plural": "User Access Profiles",
                "db_table": "user_access",
                "indexes": [
                    models.Index(
                        fields=["status"], name="user_access_status_293c96_idx"
                    ),
                    models.Index(
                        fields=["access_token"], name="user_access_access__8d9168_idx"
                    ),
                    models.Index(
                        fields=["last_access"], name="user_access_last_ac_5b41bb_idx"
                    ),
                ],
            },
        ),
    ]
